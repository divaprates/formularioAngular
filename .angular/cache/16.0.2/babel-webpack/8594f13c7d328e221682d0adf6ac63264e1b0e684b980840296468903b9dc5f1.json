{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/cep-service.service\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nclass DataFormComponent {\n  constructor(formBuilder, cepService) {\n    this.formBuilder = formBuilder;\n    this.cepService = cepService;\n    this.formulario = this.formBuilder.group({\n      nome: [null],\n      email: [null],\n      bairro: [null],\n      complemento: [null],\n      ddd: [null],\n      rua: [null],\n      cidade: [null],\n      UF: [null]\n    });\n  }\n  ngOnInit() {}\n  consultarCEP(cep, form) {\n    cep = cep.target.value;\n    if (cep != \"\") {\n      this.cepService.buscar(cep).subscribe(res => {\n        this.popularDados(res, form);\n      });\n    }\n  }\n  popularDados(dados, form) {\n    form.setValue({\n      bairro: dados.bairro,\n      complemento: dados.complemento,\n      ddd: dados.ddd,\n      rua: dados.logradouro,\n      cidade: dados.localidade,\n      UF: dados.uf\n    });\n  }\n}\nDataFormComponent.ɵfac = function DataFormComponent_Factory(t) {\n  return new (t || DataFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CepServiceService));\n};\nDataFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataFormComponent,\n  selectors: [[\"app-data-form\"]],\n  decls: 27,\n  vars: 0,\n  consts: [[\"form\", \"ngForm\"], [\"matInput\", \"\", \"placeholder\", \"CEP\", \"id\", \"cep\", \"name\", \"cep\", \"value\", \"\", 3, \"blur\"], [\"cep\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"bairro\", \"id\", \"bairro\", \"name\", \"bairro\", \"value\", \"\"], [\"bairro\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"complemento\", \"id\", \"complemento\", \"name\", \"complemento\", \"value\", \"\"], [\"complemento\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"ddd\", \"id\", \"ddd\", \"name\", \"ddd\", \"value\", \"\"], [\"ddd\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"rua\", \"id\", \"rua\", \"name\", \"rua\", \"value\", \"\"], [\"rua\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"cidade\", \"id\", \"cidade\", \"name\", \"cidade\", \"value\", \"\"], [\"cidade\", \"\"], [\"ngModel\", \"\", \"matInput\", \"\", \"placeholder\", \"UF\", \"id\", \"UF\", \"name\", \"UF\", \"value\", \"\"], [\"UF\", \"\"]],\n  template: function DataFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\");\n      i0.ɵɵtext(2, \"Formulario Reativo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\", null, 0)(5, \"mat-form-field\")(6, \"input\", 1, 2);\n      i0.ɵɵlistener(\"blur\", function DataFormComponent_Template_input_blur_6_listener($event) {\n        i0.ɵɵrestoreView(_r8);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.consultarCEP($event, _r0));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"mat-form-field\");\n      i0.ɵɵelement(10, \"input\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\");\n      i0.ɵɵelement(13, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-form-field\");\n      i0.ɵɵelement(16, \"input\", 7, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-form-field\");\n      i0.ɵɵelement(19, \"input\", 9, 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\");\n      i0.ɵɵelement(22, \"input\", 11, 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\");\n      i0.ɵɵelement(25, \"input\", 13, 14);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm, i3.MatInput, i4.MatFormField],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { DataFormComponent };","map":{"version":3,"names":["DataFormComponent","constructor","formBuilder","cepService","formulario","group","nome","email","bairro","complemento","ddd","rua","cidade","UF","ngOnInit","consultarCEP","cep","form","target","value","buscar","subscribe","res","popularDados","dados","setValue","logradouro","localidade","uf","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","CepServiceService","selectors","decls","vars","consts","template","DataFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DataFormComponent_Template_input_blur_6_listener","$event","ɵɵrestoreView","_r8","_r0","ɵɵreference","ɵɵresetView","ɵɵelement"],"sources":["/home/diva/Documentos/workspace/formularioAngular/src/app/data-form/data-form.component.ts","/home/diva/Documentos/workspace/formularioAngular/src/app/data-form/data-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { CepServiceService } from '../service/cep-service.service';\n\n@Component({\n  selector: 'app-data-form',\n  templateUrl: './data-form.component.html',\n  styleUrls: ['./data-form.component.scss']\n})\nexport class DataFormComponent {\n\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private cepService: CepServiceService\n  ) {\n    this.formulario = this.formBuilder.group({\n      nome: [null],\n      email: [null],\n      bairro: [null],\n      complemento: [null],\n      ddd: [null],\n      rua: [null],\n      cidade: [null],\n      UF: [null]\n    });\n  }\n\n  ngOnInit() { }\n\n  consultarCEP(cep: any, form: any) {\n    cep = cep.target.value;\n    if (cep != \"\") {\n      this.cepService.buscar(cep).subscribe(res => {\n        this.popularDados(res, form);\n      });\n    }\n  }\n\n  popularDados(dados: any, form: any) {\n    form.setValue({\n      bairro: dados.bairro,\n      complemento: dados.complemento,\n      ddd: dados.ddd,\n      rua: dados.logradouro,\n      cidade: dados.localidade,\n      UF: dados.uf,\n    })\n  }\n\n\n}\n","<mat-card>\n<mat-card-content>Formulario Reativo</mat-card-content>\n</mat-card>\n  \n<form #form=\"ngForm\">\n    <mat-form-field>\n      <input #cep matInput placeholder=\"CEP\" id=\"cep\" name=\"cep\" value=\"\" (blur)=\"consultarCEP($event, form)\">\n    </mat-form-field>\n  \n    <div>\n  \n      <mat-form-field>\n        <input ngModel matInput #bairro placeholder=\"bairro\" id=\"bairro\" name=\"bairro\" value=\"\">\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input ngModel matInput #complemento placeholder=\"complemento\" id=\"complemento\" name=\"complemento\" value=\"\">\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input ngModel matInput #ddd placeholder=\"ddd\" id=\"ddd\" name=\"ddd\" value=\"\">\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input ngModel matInput #rua placeholder=\"rua\" id=\"rua\" name=\"rua\" value=\"\">\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input ngModel matInput #cidade placeholder=\"cidade\" id=\"cidade\" name=\"cidade\" value=\"\">\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input ngModel matInput #UF placeholder=\"UF\" id=\"UF\" name=\"UF\" value=\"\">\n      </mat-form-field>\n  \n    </div>\n  </form>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}